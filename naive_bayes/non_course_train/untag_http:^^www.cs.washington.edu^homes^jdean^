

Jeff Dean



 Jeff Dean





     Department of Computer Science & Engineering 

     University of Washington, FR-35 

     Seattle, WA 98195 USA 
Office: 

Chateau Sieg 110.





Here's the view from my office (or would be if those danged buildings weren't in the way): 




 




Future Plans

I plan to graduate in summer, 1996, after which I'll be joining DEC's Western Research Laboratory in sunny Palo Alto.  We've just bought a house in nearby Menlo Park.

 Here is my curriculum vita (postscript).  I also have a summary (postscript) of my research and teaching experience.






Projects


I work primarily on the 
Cecil project.  

Cecil is a new pure object-oriented langauge that we are using as a
vehicle for integrated research in the areas of language design,
programming environments, and optimizing compiler techniques.  We
intend for our techniques to scale to large, real-world programs, and
to keep ourselves true to this goal, we're implementing the Vortex
compiler in Cecil.  We currently have about 70,000 lines of Cecil code
in the compiler.  
 
Much of our work in this group involves tracking down compiler bugs.

 I also hang out in the SPIN
project meetings.  SPIN is an extensible operating system
microkernel which supports the dynamic adaptation of system interfaces
and implementations through direct application control, while still
maintaining system integrity and inter-application isolation.  

During Spring quarter, I was one of the organizers for CSE 590K, the department's compiler seminar.



Research Interests 



My research concerns the efficient implementation of
object-oriented languages through compiler optimization techniques.
In particular, I am exploring how whole-program analysis can be used
to improve performance, how it affects incremental compilation, and
how it interacts with other optimization techniques, especially
profile-guided optimization techniques.  I am also interested in how
whole-program optimization affects language design: if it is assumed
that the compiler will have access to the entire program, then many
compromises made in existing language designs become unnecessary.  I
am interested in applying the lessons learned in exploring whole
program optimization towards designing a new systems programming
language that is both flexible and efficient, based on an underlying
implementation that does whole program analysis.

To validate my research, I have been one of the three principal
designers and developers of Vortex, an optimizing compiler for
object-oriented languages.  Vortex defines a language-independent
intermediate language for object-oriented languages that is
high-enough level to permit optimization of features such as message
sends, closures, and object creations.  It also contains a unique way
of composing optimization passes so that they run in parallel,
obtaining better results than repeatedly running the passes
separately.  For example, the compiler applies intraprocedural class
analysis, profile-guided receiver class prediction, inlining, alias
analysis, splitting, and CSE all at once, in a single combined pass.
Part of the work on Vortex has been to develop ways of structuring
optimization passes to permit this kind of composition while still
allowing the passes to be developed largely independently of each
other.  We have a nice framework for specifying iterative data flow
analyses that permits clients to develop new optimization passes with
relatively little effort (for example, the Vortex dead assignment
elimination pass is approximately 50 lines of code).





Publications


Some recent  papers  I've authored or co-authored.



Personal


I love very spicy food (as they say, "mild is a four letter word") and Coke.  I should probably kick my caffeine habit.  Most of my enjoyable moments are spent with my wife Heidi and my daughter Victoria.  I would really like to go here someday.  My wife and I spent our honeymoon on Kauai during Hurricane Iniki.

 I recently won a biplane ride from Galvin Flying here in Seattle (I guess I can't say "I never win anything!" anymore).  My wife and I took the flight, which consisted of a 20 minute flight around and over downtown Seattle and Puget Sound in a Travel Air 1927 model biplane.  I was feeling daring, but, sadly, their insurance coverage doesn't permit passengers to walk on the wing, so we just sat back and enjoyed the ride and the view.  It would have been fantastic even if we'd had to pay for it.  Highly recommended!  If you're looking for something fun to do in Seattle, their number is 763-0350.

 Here's my rather lengthy hotlist.






jdean@cs.washington.edu 

